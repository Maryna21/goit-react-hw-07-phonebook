{"version":3,"sources":["components/ContactList/contactList.module.css","components/ContactList/transitions/addTransition.module.css","components/Filter/filter.module.css","components/Error/error.module.css","components/Error/errorTransition.module.css","app.module.css","components/Container/container.module.css","logoTransition.module.css","redux/contacts-actions.js","components/Error/error.js","components/ContactForm/contactForm.js","svg/cross.js","components/ContactList/contactList.js","components/Filter/filter.js","components/Container/container.js","App.js","reportWebVitals.js","redux/contacts-reducer.js","store.js","index.js","components/ContactForm/contactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","Error","CSSTransition","in","timeout","classNames","errorTransition","unmountOnExit","className","s","box","ContactForm","loginInputId","state","error","handleNameChange","event","target","value","setState","handleSubmit","preventDefault","props","contacts","find","setTimeout","onSubmit","reset","this","contactForm","labelForm","htmlFor","inputForm","type","onChange","buttonContactForm","Component","connect","items","dispatch","contactsActions","Cross","data-name","fill","width","height","viewBox","xmlns","rx","transform","x","y","ContactList","onDeleteContact","console","log","TransitionGroup","component","list","map","addTransition","appear","item","buttonDelete","onClick","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","e","contactsAction","label","input","Container","children","container","App","logoTransition","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialContacts","localStorage","getItem","parsedInitContacts","JSON","parse","createReducer","actions","_","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7eb0c0ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"contactList_buttonDelete__1KIRp\",\"item\":\"contactList_item__1Zfmy\",\"number\":\"contactList_number__PxfHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"addTransition_enter__3Z_LA\",\"enterActive\":\"addTransition_enterActive__3A6JT\",\"exit\":\"addTransition_exit__2pRWX\",\"exitActive\":\"addTransition_exitActive__sk3MZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__1EaBe\",\"input\":\"filter_input__1g0Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"error_box__2AiIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"errorTransition_enter__2_wav\",\"enterActive\":\"errorTransition_enterActive__2qmF0\",\"exit\":\"errorTransition_exit__3P-rp\",\"exitActive\":\"errorTransition_exitActive__3bF8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"app_title__2fbQI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"logoTransition_appear__3AKSh\",\"appearActive\":\"logoTransition_appearActive__2IOna\"};","import shortid from 'shortid';\n// import types from 'redux/contacts-types';\nimport { createAction } from '@reduxjs/toolkit';\n// import { number } from 'prop-types';\n \nconst addContact = createAction('contacts/add', (name, number) => ({\n        payload: {\n         id: shortid.generate(),\n         name,\n         number,  \n    }\n}))\n\n// const addContact = (name, number) => {\n//     return {\n//         type: types.ADD,\n//         payload: {\n//          id: shortid.generate(),\n//          name,\n//          number, \n//         }\n//    } \n// };\nconst deleteContact = createAction('contacts/delete');\n\n// const deleteContact = contactId => {\n//     return {\n//        type: types.DELETE,\n//        payload: contactId, \n//     } \n// };\n\nconst changeFilter = createAction('contacts/changeFilter');\n\n// const changeFilter = value => ({\n//     type: types.CHANGE_FILTER,\n//     payload: value,\n// })\n\n// const initContacts = contacts => ({\n//     type: types.INIT_CONTACTS,\n//     payload: contacts,\n// })\n\n \nexport default { addContact, deleteContact, changeFilter};","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport s from 'components/Error/error.module.css';\nimport errorTransition from 'components/Error/errorTransition.module.css';\nconst Error = () => {\n    return (\n         <CSSTransition\n            in={true}\n            timeout={250}\n            classNames={errorTransition}\n            unmountOnExit\n        >\n            <div className={s.box}>Contact is already exists!</div>\n            </CSSTransition>\n    )\n}\nexport default Error;","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport React, { Component } from 'react';\nimport s from 'components/ContactForm/contactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from 'redux/contacts-actions';\nimport Error from 'components/Error/error';\n// import { toast } from 'react-toastify';\n\nclass ContactForm extends Component{\n    loginInputId = shortid.generate();\n    state = {\n        name: '',\n      number: '',\n      error: false,\n      }\n  handleNameChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // if (this.state.name === '') {\n    //    return toast.warning('Please write something!');\n    // }\n            \n     if (this.props.contacts.find(({ name }) => name)) {\n      this.setState({\n        error: true,\n      })\n      return setTimeout(() => this.setState({ error: false, }), 500);\n     }\n    this.props.onSubmit(this.state);\n    this.reset();\n  }\n        reset = () => {\n            this.setState({name: '', number:''})\n        }\n  render() {\n    const { error } = this.state;\n    return (\n              <>\n              <form className={s.contactForm}\n                onSubmit={this.handleSubmit}>\n                <label className={s.labelForm} htmlFor={this.loginInputId}>Name</label>\n                <input className={s.inputForm} type=\"text\" name=\"name\" id={this.loginInputId} value={this.state.name} onChange={this.handleNameChange}/>\n                <label className={s.labelForm} htmlFor={this.loginInputId}>Number</label>\n                <input className={s.inputForm}  type=\"tel\" name=\"number\" id={this.loginInputId} value={this.state.number} onChange={this.handleNameChange}/>\n                <button className={s.buttonContactForm} type=\"submit\">Add contact</button>\n              </form>\n              { error && <Error /> } \n    </>\n            );\n          }}\n\n          ContactForm.propTypes = {\n            handleSubmit: PropTypes.func,\n            onAddContact: PropTypes.func,\n            loginInputId: PropTypes.func,\n            name: PropTypes.string,\n            number: PropTypes.number,\n          };\n\nconst mapStateToProps = (state) => ({\n  // console.log(state);\n  contacts: state.contacts.items,\n});\n         \nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) => dispatch(contactsActions.addContact(name, number)),\n  });\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\n const Cross = ()=>{\n    return(\n  <svg data-name=\"Layer 2\" fill=\"white\" width=\"60\" height=\"60\" id=\"bcc87848-35d3-4b8c-bef5-f50bbd1dee72\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"2.5\" rx=\"1.25\" transform=\"translate(19 45.87) rotate(-135)\" width=\"15.435\" x=\"11.282\" y=\"17.75\"/><rect height=\"2.5\" rx=\"1.25\" transform=\"translate(-7.87 19) rotate(-45)\" width=\"15.435\" x=\"11.282\" y=\"17.75\"/></svg>\n)\n}\nexport default Cross;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from 'components/ContactList/contactList.module.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport addTransition from 'components/ContactList/transitions/addTransition.module.css';\nimport Cross from 'svg/cross';\nimport contactsActions from 'redux/contacts-actions';\nimport { connect } from 'react-redux';\n\n\nclass ContactList extends Component {\n\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contacts);\n  //   if(parsedContacts){\n  //   this.props.initContacts(parsedContacts);}\n  // }\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.contacts !== prevProps.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.props.contacts));\n  //   }\n  // }\n  render() {\n    const { contacts, onDeleteContact } = this.props;\n    console.log('props', this.props)\n\n    return (\n      <TransitionGroup component=\"ul\" className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames={addTransition} appear={true} unmountOnExit>\n            <li className={s.item}>\n              <div>{name}</div>\n              <div className={s.number}>{number}</div>\n              <button className={s.buttonDelete} type=\"button\" onClick={() => onDeleteContact(id)}><Cross />\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.number,\n    }),\n  )\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact  =>\n    contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\ncontacts: getVisibleContacts(items, filter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\n  // initContacts: contacts => dispatch(contactsActions.initContacts(contacts))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {CSSTransition } from 'react-transition-group';\nimport addTransition from 'components/ContactList/transitions/addTransition.module.css';\nimport s from 'components/Filter/filter.module.css';\nimport contactsAction from 'redux/contacts-actions';\n\nfunction Filter({value, onChange}){\n    return (  \n        <CSSTransition timeout={250} classNames={addTransition} appear={true}>\n            <form className={s.filter}>\n            <label className={s.label}>Find contacts by name</label>\n                <input className={s.input} type=\"name\" value={value} onChange={onChange} />\n            </form>\n            </CSSTransition>  \n            \n    )\n}\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChangeFilter: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n    value: state.contacts.filter\n})\n\nconst mapDispatchToProps = dispatch =>({\n onChange: (e) => dispatch(contactsAction.changeFilter(e.target.value))  \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import s from 'components/Container/container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;","import './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from 'components/ContactForm/contactForm';\nimport ContactList from 'components/ContactList/contactList';\nimport Filter from 'components/Filter/filter';\nimport s from 'app.module.css';\nimport Container from 'components/Container/container';\nimport { CSSTransition } from 'react-transition-group';\nimport logoTransition from 'logoTransition.module.css';\n\nclass App extends Component {\n\n//   addContact = ({name, number}) => {\n//     const contact = {\n//         id: shortid.generate(),\n//         name,\n//         number: number,\n//     };\n//     this.setState(prevState =>{\n//       if (this.state.contacts.find((contact) => contact.name === name)) {\n//         this.setState({ error: true, })\n//         return setTimeout(() => this.setState({ error: false, }), 500);\n//       }\n//       else{\n//       return {\n//           contacts: [...prevState.contacts, contact],}}\n//   })\n// };\n\n// deleteContact = contactId =>{\n//   this.setState(prevState =>({\n//     contacts: prevState.contacts.filter(contact => contact.id!== contactId),\n//   }))\n// }\n\n// changeFilter = filter => {\n//   this.setState({filter});\n// }\n  \n// getVisibleContacts = ()=>{\n//   const {contacts, filter} = this.state;\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase()), \n//     )\n// }\n  \n  \n  render() {\n    return (\n      <Container>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames={logoTransition}\n        unmountOnExit\n        >\n          <h1 className={s.title}>Phonebook</h1>\n          </CSSTransition>\n     <ContactForm/>\n    <Filter/> \n        <ContactList/>\n      </Container>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\n// import types from 'redux/contacts-types';\nimport actions from './contacts-actions';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst initialContacts = localStorage.getItem('saveContacts') || '[]';\nconst parsedInitContacts = JSON.parse(initialContacts);\n\nconst items = createReducer(parsedInitContacts, {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n        state.filter(({id})=> id !== payload)\n})\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, {payload}) => payload,\n})\n\nexport default combineReducers({\n    items,\n    filter\n})\n\n\n// const items = (state = [], actions) => {\n//     console.log('reducer', actions, state)\n//     switch (actions.type) {\n//         case types.ADD:\n//             return [...state, actions.payload];\n        \n//         case types.DELETE:\n//             return state.filter(({ id }) => id !== actions.payload);\n        \n//         case types.INIT_CONTACTS:\n//             return actions.payload;\n        \n//         default:\n//             return state;\n//     }\n// };\n\n// // const filter = (state = '', { type, payload }) => {\n// //     switch (type) {\n// //         case types.CHANGE_FILTER:\n// //             return payload;\n    \n// //         default:\n// //             return state;\n// //     }\n// // };\n// const store = createStore(reducer);\n// export default store;","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from 'redux/contacts-reducer';\n\nconst rootReducer = combineReducers({\n contacts: contactsReducer\n}) \n\n\nconst store = createStore(rootReducer, composeWithDevTools());\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__2leNd\",\"labelForm\":\"contactForm_labelForm__108mt\",\"inputForm\":\"contactForm_inputForm__2N457\",\"buttonContactForm\":\"contactForm_buttonContactForm__2b9Ri\"};"],"sourceRoot":""}