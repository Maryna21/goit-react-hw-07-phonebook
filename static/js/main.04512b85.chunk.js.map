{"version":3,"sources":["components/Error/error.module.css","components/Error/errorTransition.module.css","app.module.css","components/Container/container.module.css","logoTransition.module.css","components/ContactForm/contactForm.module.css","redux/contacts-actions.js","redux/contacts-operations.js","redux/contacts-selectors.js","components/Error/error.js","components/ContactForm/contactForm.js","svg/cross.js","components/ContactList/contactList.js","components/Filter/filter.js","components/Container/container.js","App.js","reportWebVitals.js","redux/contacts-reducer.js","redux/store.js","index.js","components/ContactList/contactList.module.css","components/ContactList/transitions/addTransition.module.css","components/Filter/filter.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","clearError","axios","defaults","baseURL","dispatch","a","get","data","name","number","contact","post","then","catch","error","contactId","delete","getLoading","state","contacts","loading","getAllContacts","items","getFilter","filter","getError","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Error","this","props","setTimeout","CSSTransition","in","message","timeout","classNames","errorTransition","unmountOnExit","className","s","box","Component","connect","ContactForm","loginInputId","shortid","generate","handleNameChange","event","target","value","setState","handleSubmit","preventDefault","find","onSubmit","reset","contactForm","labelForm","htmlFor","inputForm","type","id","onChange","buttonContactForm","contactsOperations","Cross","data-name","fill","width","height","viewBox","xmlns","rx","transform","x","y","ContactList","onDeleteContact","console","log","TransitionGroup","component","list","map","addTransition","appear","item","buttonDelete","onClick","e","label","input","Container","children","container","App","fetchContacts","isloadingContacts","logoTransition","title","getElementError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devToops","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04512b85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"error_box__2AiIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"errorTransition_enter__2_wav\",\"enterActive\":\"errorTransition_enterActive__2qmF0\",\"exit\":\"errorTransition_exit__3P-rp\",\"exitActive\":\"errorTransition_exitActive__3bF8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"app_title__2fbQI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"logoTransition_appear__3AKSh\",\"appearActive\":\"logoTransition_appearActive__2IOna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__2leNd\",\"labelForm\":\"contactForm_labelForm__108mt\",\"inputForm\":\"contactForm_inputForm__2N457\",\"buttonContactForm\":\"contactForm_buttonContactForm__2b9Ri\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/addContactRequest');\nexport const fetchContactsSuccess = createAction('contacts/addContactSuccess ');\nexport const fetchContactsError = createAction('contacts/addContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess ');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\nexport const clearError = createAction('contacts/clearError');\n\n","import axios from 'axios';\nimport actions from 'redux/contacts-actions';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n} from 'redux/contacts-actions'\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\n// const fetchContacts = () => dispatch => {\n//     dispatch(fetchContactsRequest());\n//     axios\n//         .get('/contacts').then(({ data }) => dispatch(fetchContactsSuccess(data)))\n//         .catch(error => dispatch(fetchContactsError(error)));\n// }\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n\n    try {\n        const { data } = await axios.get('/contacts');\n        dispatch(fetchContactsSuccess(data));\n    } catch (error) {\n        dispatch(fetchContactsError(error));\n    }\n}\n\nconst addContact = ({ name, number }) => dispatch => {\n    const contact = {\n        name,\n        number\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) =>\n        dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error)));\n}\n\nexport default {\n    fetchContacts,\n    addContact,\n    deleteContact\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(contact => contact.toLowerCase().includes(normalizedFilter));\n    }\n)\n    //  console.log('filterOk', getFilter(state));\n    \n  \n\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport s from 'components/Error/error.module.css';\nimport errorTransition from 'components/Error/errorTransition.module.css';\nimport { clearError } from 'redux/contacts-actions';\nimport { getError } from 'redux/contacts-selectors';\nimport { connect } from 'react-redux';\n\nclass Error extends Component {\n\n    componentDidMount() {\n        if (this.props.error) {\n            setTimeout(() => {\n                this.props.clearError();\n            }, 2500);\n            }\n        }\n    \n    render() {\n        return(<CSSTransition\n            in={this.props.message}\n            timeout={250}\n            classNames={errorTransition}\n            unmountOnExit\n        >\n            <div className={s.box}><p>{this.props.message}</p></div>\n            </CSSTransition>)\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    error: getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    clearError: () => dispatch(clearError())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Error);","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport React, { Component } from 'react';\nimport s from 'components/ContactForm/contactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsOperations from 'redux/contacts-operations';\nimport Error from 'components/Error/error';\nimport { getAllContacts } from 'redux/contacts-selectors';\n// import { toast } from 'react-toastify';\n\nclass ContactForm extends Component{\n    loginInputId = shortid.generate();\n    state = {\n        name: '',\n      number: '',\n      error: false,\n      }\n  handleNameChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // if (this.state.name === '') {\n    //    return toast.warning('Please write something!');\n    // }\n            \n     if (this.props.contacts.find(({ name }) => name)) {\n      this.setState({\n        error: true,\n      })\n      return setTimeout(() => this.setState({ error: false, }), 500);\n     }\n    this.props.onSubmit(this.state);\n    this.reset();\n  }\n        reset = () => {\n            this.setState({name: '', number:''})\n        }\n  render() {\n    const { error } = this.state;\n    return (\n              <>\n              <form className={s.contactForm}\n                onSubmit={this.handleSubmit}>\n                <label className={s.labelForm} htmlFor={this.loginInputId}>Name</label>\n                <input className={s.inputForm} type=\"text\" name=\"name\" id={this.loginInputId} value={this.state.name} onChange={this.handleNameChange}/>\n                <label className={s.labelForm} htmlFor={this.loginInputId}>Number</label>\n                <input className={s.inputForm}  type=\"tel\" name=\"number\" id={this.loginInputId} value={this.state.number} onChange={this.handleNameChange}/>\n                <button className={s.buttonContactForm} type=\"submit\">Add contact</button>\n              </form>\n              { error && <Error message='Contact is already exists!' /> } \n    </>\n            );\n          }}\n\n          ContactForm.propTypes = {\n            handleSubmit: PropTypes.func,\n            onAddContact: PropTypes.func,\n            loginInputId: PropTypes.func,\n            name: PropTypes.string,\n            number: PropTypes.number,\n          };\n\nconst mapStateToProps = (state) => ({\n  // console.log(state);\n  contacts: getAllContacts(state),\n});\n         \nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) => dispatch(contactsOperations.addContact(name, number)),\n  });\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\n const Cross = ()=>{\n    return(\n  <svg data-name=\"Layer 2\" fill=\"white\" width=\"60\" height=\"60\" id=\"bcc87848-35d3-4b8c-bef5-f50bbd1dee72\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"2.5\" rx=\"1.25\" transform=\"translate(19 45.87) rotate(-135)\" width=\"15.435\" x=\"11.282\" y=\"17.75\"/><rect height=\"2.5\" rx=\"1.25\" transform=\"translate(-7.87 19) rotate(-45)\" width=\"15.435\" x=\"11.282\" y=\"17.75\"/></svg>\n)\n}\nexport default Cross;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from 'components/ContactList/contactList.module.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport  addTransition from 'components/ContactList/transitions/addTransition.module.css';\nimport Cross from 'svg/cross';\nimport contactsOperations from 'redux/contacts-operations';\nimport { connect } from 'react-redux';\nimport { getVisibleContacts } from 'redux/contacts-selectors';\n\n\nclass ContactList extends Component {\n \n  render() {\n    const { contacts, onDeleteContact } = this.props;\n    console.log('props', this.props)\n\n    return (\n      <TransitionGroup component=\"ul\" className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames={addTransition} appear={true} unmountOnExit>\n            <li className={s.item}>\n              <div>{name}</div>\n              <div className={s.number}>{number}</div>\n              <button className={s.buttonDelete} type=\"button\" onClick={() => onDeleteContact(id)}><Cross />\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.number,\n    }),\n  )\n};\n\nconst mapStateToProps = (state) => ({\ncontacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {CSSTransition } from 'react-transition-group';\nimport addTransition from 'components/ContactList/transitions/addTransition.module.css';\nimport s from 'components/Filter/filter.module.css';\nimport {changeFilter} from 'redux/contacts-actions';\nimport { getFilter } from 'redux/contacts-selectors';\n\nfunction Filter({value, onChange}){\n    return (  \n        <CSSTransition timeout={250} classNames={addTransition} appear={true}>\n            <form className={s.filter}>\n            <label className={s.label}>Find contacts by name</label>\n                <input className={s.input} type=\"name\" value={value} onChange={onChange} />\n            </form>\n            </CSSTransition>  \n            \n    )\n}\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChangeFilter: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n    value: getFilter(state),\n})\n\nconst mapDispatchToProps = dispatch =>({\n onChange: (e) => dispatch(changeFilter(e.target.value))  \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import s from 'components/Container/container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;","import './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from 'components/ContactForm/contactForm';\nimport ContactList from 'components/ContactList/contactList';\nimport Filter from 'components/Filter/filter';\nimport s from 'app.module.css';\nimport Container from 'components/Container/container';\nimport { CSSTransition } from 'react-transition-group';\nimport logoTransition from 'logoTransition.module.css';\nimport { connect } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsOperations from 'redux/contacts-operations';\nimport { getLoading } from 'redux/contacts-selectors';\nimport { getElementError } from '@testing-library/dom';\nimport Error from 'components/Error/error';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { isloadingContacts, error } = this.props;\n    return (\n      <Container>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames={logoTransition}\n        unmountOnExit\n        >\n          <h1 className={s.title}>Phonebook</h1>\n          </CSSTransition>\n     <ContactForm/>\n        <Filter />\n        {isloadingContacts && <h1>loading...</h1>}\n        <ContactList />\n        {error && <Error message={'ERROR contact is not found!'}/>}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isloadingContacts: getLoading(state),\n  error: getElementError(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    changeFilter,\n    clearError\n} from 'redux/contacts-actions'\n\nconst initialContacts = [];\n\nconst items = createReducer(initialContacts, {\n    [fetchContactsSuccess]: (_, {payload}) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter(({id})=> id !== payload)\n})\n\nconst loading = createReducer(false, {\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]:() => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false\n});\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n    [fetchContactsError]: (_, { payload }) => payload,\n    [addContactError]: (_, { payload }) => payload,\n    [deleteContactError]: (_, { payload }) => payload,\n    [clearError]: () => null,\n});\n\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n    error\n})\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport contactsReducer from 'redux/contacts-reducer';\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    }\n}),\n    logger,\n];\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n    },\n    middleware,\n    devToops: process.env.NODE_ENV==='development',\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"contactList_buttonDelete__1KIRp\",\"item\":\"contactList_item__1Zfmy\",\"number\":\"contactList_number__PxfHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"addTransition_enter__3Z_LA\",\"enterActive\":\"addTransition_enterActive__3A6JT\",\"exit\":\"addTransition_exit__2pRWX\",\"exitActive\":\"addTransition_exitActive__sk3MZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__1EaBe\",\"input\":\"filter_input__1g0Wd\"};"],"sourceRoot":""}