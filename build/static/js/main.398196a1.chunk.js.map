{"version":3,"sources":["components/ContactForm/contactForm.module.css","components/ContactList/contactList.module.css","components/ContactList/transitions/addTransition.module.css","components/Filter/filter.module.css","components/Error/error.module.css","components/Error/errorTransition.module.css","app.module.css","components/Container/container.module.css","logoTransition.module.css","redux/contacts-actions.js","redux/contacts-operations.js","components/Error/error.js","redux/contacts-selectors.js","components/ContactForm/contactForm.js","svg/cross.js","components/ContactList/contactList.js","components/Filter/filter.js","components/Container/container.js","App.js","reportWebVitals.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","get","data","contact","post","then","console","log","catch","error","contactId","delete","Error","CSSTransition","in","timeout","classNames","errorTransition","unmountOnExit","className","s","box","getLoading","state","contacts","loading","getAllContacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","loginInputId","shortid","generate","number","handleNameChange","event","target","value","setState","handleSubmit","preventDefault","props","find","setTimeout","onSubmit","reset","this","contactForm","labelForm","htmlFor","inputForm","type","id","onChange","buttonContactForm","Component","connect","contactsOperations","Cross","data-name","fill","width","height","viewBox","xmlns","rx","transform","x","y","ContactList","onDeleteContact","TransitionGroup","component","list","map","addTransition","appear","item","buttonDelete","onClick","e","contactsAction","label","input","Container","children","container","App","fetchContacts","logoTransition","title","isloadingContacts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devToops","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.398196a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__2leNd\",\"labelForm\":\"contactForm_labelForm__108mt\",\"inputForm\":\"contactForm_inputForm__2N457\",\"buttonContactForm\":\"contactForm_buttonContactForm__2b9Ri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"contactList_buttonDelete__1KIRp\",\"item\":\"contactList_item__1Zfmy\",\"number\":\"contactList_number__PxfHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"addTransition_enter__3Z_LA\",\"enterActive\":\"addTransition_enterActive__3A6JT\",\"exit\":\"addTransition_exit__2pRWX\",\"exitActive\":\"addTransition_exitActive__sk3MZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__1EaBe\",\"input\":\"filter_input__1g0Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"error_box__2AiIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"errorTransition_enter__2_wav\",\"enterActive\":\"errorTransition_enterActive__2qmF0\",\"exit\":\"errorTransition_exit__3P-rp\",\"exitActive\":\"errorTransition_exitActive__3bF8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"app_title__2fbQI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"logoTransition_appear__3AKSh\",\"appearActive\":\"logoTransition_appearActive__2IOna\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/addContactRequest');\nexport const fetchContactsSuccess = createAction('contacts/addContactSuccess');\nexport const fetchContactsError = createAction('contacts/addContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess',\n//     (payload) => {\n//     return {\n//         payload\n//     }\n// }\n);\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess ');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n\n\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n","import axios from 'axios';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n} from 'redux/contacts-actions'\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\n// const fetchContacts = () => dispatch => {\n//     dispatch(fetchContactsRequest());\n//     axios\n//         .get('/contacts').then(({ data }) => dispatch(fetchContactsSuccess(data)))\n//         .catch(error => dispatch(fetchContactsError(error)));\n// }\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n\n    try {\n        const { data } = await axios.get('/contacts');\n        dispatch(fetchContactsSuccess(data));\n    } catch (error) {\n        dispatch(fetchContactsError(error));\n    }\n}\n\nconst addContact = contact => dispatch => {\n    // console.log('okey', { name, number});\n    // const contact = {\n    //     name,\n    //     number,\n    // };\n\n    dispatch(addContactRequest());\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => console.log('dataOk', data) ||\n            dispatch(addContactSuccess([data]))) \n        .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error)));\n}\n\nexport default {\n    fetchContacts,\n    addContact,\n    deleteContact\n}","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport s from 'components/Error/error.module.css';\nimport errorTransition from 'components/Error/errorTransition.module.css';\nconst Error = () => {\n    return (\n         <CSSTransition\n            in={true}\n            timeout={250}\n            classNames={errorTransition}\n            unmountOnExit\n        >\n            <div className={s.box}>Contact is already exists!</div>\n            </CSSTransition>\n    )\n}\nexport default Error;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({name})  =>\n    name.toLowerCase().includes(normalizedFilter));\n    }\n)\n\n\n// export const getVisibleContacts = state => {\n//     const contacts = getAllContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact  =>\n//     contact.name.toLowerCase().includes(normalizedFilter));\n// }\n","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport React, { Component } from 'react';\nimport s from 'components/ContactForm/contactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsOperations from 'redux/contacts-operations';\nimport Error from 'components/Error/error';\nimport { getAllContacts, getName } from 'redux/contacts-selectors';\n// import { toast } from 'react-toastify';\n\nclass ContactForm extends Component{\n    loginInputId = shortid.generate();\n    state = {\n        name: '',\n      number: '',\n      error: false,\n      }\n  handleNameChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n     event.preventDefault();\n    \n    if (this.props.contacts.find(contact  =>  contact.name === this.state.name)){\n      this.setState({\n        error: true,\n      })\n      return setTimeout(() => this.setState({ error: false, }), 500);\n     }\n    this.props.onSubmit(this.state);\n    this.reset();\n  }\n  reset = () => {\n          this.setState({name: '', number:''})\n  }\n  \n  render() {\n    const { error } = this.state;\n    return (\n              <>\n              <form className={s.contactForm}\n                onSubmit={this.handleSubmit}>\n                <label className={s.labelForm} htmlFor={this.loginInputId}>Name</label>\n                <input className={s.inputForm} type=\"text\" name=\"name\" id={this.loginInputId} value={this.state.name} onChange={this.handleNameChange}/>\n                <label className={s.labelForm} htmlFor={this.loginInputId}>Number</label>\n                <input className={s.inputForm}  type=\"tel\" name=\"number\" id={this.loginInputId} value={this.state.number} onChange={this.handleNameChange}/>\n                <button className={s.buttonContactForm} type=\"submit\">Add contact</button>\n              </form>\n              { error && <Error /> } \n    </>\n            );\n          }}\n\n          ContactForm.propTypes = {\n            handleSubmit: PropTypes.func,\n            onAddContact: PropTypes.func,\n            loginInputId: PropTypes.func,\n            name: PropTypes.string,\n            number: PropTypes.number,\n          };\n\nconst mapStateToProps = (state) => ({\n  // console.log(state);\n  contacts: getAllContacts(state),\n});\n         \nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) => dispatch(contactsOperations.addContact({ name, number})),\n});\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\n const Cross = ()=>{\n    return(\n  <svg data-name=\"Layer 2\" fill=\"white\" width=\"60\" height=\"60\" id=\"bcc87848-35d3-4b8c-bef5-f50bbd1dee72\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"2.5\" rx=\"1.25\" transform=\"translate(19 45.87) rotate(-135)\" width=\"15.435\" x=\"11.282\" y=\"17.75\"/><rect height=\"2.5\" rx=\"1.25\" transform=\"translate(-7.87 19) rotate(-45)\" width=\"15.435\" x=\"11.282\" y=\"17.75\"/></svg>\n)\n}\nexport default Cross;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from 'components/ContactList/contactList.module.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport  addTransition from 'components/ContactList/transitions/addTransition.module.css';\nimport Cross from 'svg/cross';\nimport contactsOperations from 'redux/contacts-operations';\nimport { connect } from 'react-redux';\nimport { getVisibleContacts } from 'redux/contacts-selectors';\n\n\nclass ContactList extends Component {\n \n  render() {\n    const { contacts, onDeleteContact } = this.props;\n    console.log('props', this.props)\n\n    return (\n      <TransitionGroup component=\"ul\" className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames={addTransition} appear={true} unmountOnExit>\n            <li className={s.item}>\n              <div>{name}</div>\n              <div className={s.number}>{number}</div>\n              <button className={s.buttonDelete} type=\"button\" onClick={() => onDeleteContact(id)}><Cross />\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.number,\n    }),\n  )\n};\n\nconst mapStateToProps = (state) => ({\ncontacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\n\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {CSSTransition } from 'react-transition-group';\nimport addTransition from 'components/ContactList/transitions/addTransition.module.css';\nimport s from 'components/Filter/filter.module.css';\nimport * as contactsAction from 'redux/contacts-actions';\nimport { getFilter } from 'redux/contacts-selectors';\n\nfunction Filter({value, onChange}){\n    return (  \n        <CSSTransition timeout={250} classNames={addTransition} appear={true}>\n            <form className={s.filter}>\n            <label className={s.label}>Find contacts by name</label>\n                <input className={s.input} type=\"name\" value={value} onChange={onChange} />\n            </form>\n            </CSSTransition>  \n            \n    )\n}\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChangeFilter: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n    value: getFilter(state),\n})\n\nconst mapDispatchToProps = dispatch =>({\n onChange: (e) => dispatch(contactsAction.changeFilter(e.target.value))  \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import s from 'components/Container/container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;","import './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from 'components/ContactForm/contactForm';\nimport ContactList from 'components/ContactList/contactList';\nimport Filter from 'components/Filter/filter';\nimport s from 'app.module.css';\nimport Container from 'components/Container/container';\nimport { CSSTransition } from 'react-transition-group';\nimport logoTransition from 'logoTransition.module.css';\nimport { connect } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsOperations from 'redux/contacts-operations';\nimport { getLoading } from 'redux/contacts-selectors';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <Container>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames={logoTransition}\n        unmountOnExit\n        >\n          <h1 className={s.title}>Phonebook</h1>\n          </CSSTransition>\n     <ContactForm/>\n        <Filter />\n        {this.props.isloadingContacts && <h1>loading...</h1>}\n        <ContactList/>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isloadingContacts: getLoading(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    changeFilter\n} from 'redux/contacts-actions'\n\nconst initialContacts = [];\n\nconst items = createReducer(initialContacts, {\n    [fetchContactsSuccess]: (_, {payload}) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, ...payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter(({id})=> id !== payload)\n})\n\nconst loading = createReducer(false, {\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]:() => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false\n});\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n    error\n})\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport contactsReducer from 'redux/contacts-reducer';\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    }\n}),\n    logger,\n];\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n    },\n    middleware,\n    devToops: process.env.NODE_ENV==='development',\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}